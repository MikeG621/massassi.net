<html>
<head>
 <style>
  <!--
        A:link 	  {text-decoration: none; color: #52A54E; }
        A:visited {text-decoration: none; color: #52A54E; }
        A:active  {text-decoration: none; color: #FFFFFF; }
        A:hover   {text-decoration: underline; color: #A6BA45}
  -->
 </style>
 <title>The Massassi Temple: Templates Defined</title>
</head>
<body bgcolor="#000000" text="#FFFFFF" link="#52A54E" vlink="#52A54E">

<!-- Ad Code -->
<!--#exec cgi="/cgi-bin/ads/massassi_ads.cgi" -->
<!-- End Ad Code -->

<font face="verdana,arial,helvetica" size="2">

<a href="tutorial_print.shtml"><img src="/images/printable.gif" width=100 height=30 border=0 align="right" alt="Printable Version"></a>
<font face="verdana,arial,helvetica" size="5">Templates: A Reference</font>
<br clear="all">
<hr>
Author: <a href="mailto:gms_slug@hotmail.com">GMS_Slug</a>
<br>
<br>

<p>Templates can be found in your jed\jeddata folder. The two files are called master.tpl and mots.tpl; mots.tpl obviously handles templates for mots, and master.tpl is for JK.  Templates are written in the .jkl of every level. They contain vital info for every single "thing" in the level, such as what 3do to use for the "thing," whether the thing has ai or not, etc. If you're going to be adding new 3dos to your level, it's important for you to know templates.  Template knowledge also comes in handy quite frequently even if you aren't adding new 3dos to your level. Say you want a shuttle in your level. Now, you may have noticed with the shuttle that you can't ever walk up to it.. you keep getting blocked by some kind of invisible wall.. You can change this with a little template editing. Various things like that which don't seem important now, but become little hassles in the future if you don't know what to do about them.</p>

<p>Templates are often based off of parent templates. That is to say, a template such as _decor will be referred to in many different templates.  _decor contains information that will be used for any template based off of it.  This helps template makers because they have to specify much less.. Confused? Here's an example..</p>

<font size="3" color="gray">
<pre>
# DESC:
# BBOX: 0 0 0 0 0 0
_decor        none       orient=(0.000000/0.000000/0.000000) type=cog collide=1 move=path
</pre></font>

<p><i>This is the "parent" template. You see it contains a little information.</i></p>

<font size="3" color="gray"><pre>
# DESC:   
# BBOX: 0 0 0 0 0 0
_structure    <font color="red">_decor</font>     collide=3 thingflags=0x8
</pre></font>

<p><i>This template is based off of _structure so it has a collide of 3, and since _structure is based off of _decor, both _structure and _walkstruct have an orient value of (0.000000/0.000000/0.000000). _walkstruct changes the thingflags value however, so it does not have the same flags as _structure.</i></p>

<p>Easy enough, right?  Well, it can get a bit crazy at some points. Backtracking some templates will make you go through nearly a dozen others (as opposed to the 2 templates you have to go through to find out where _walkstruct is based off of) before you find out where the whole thing started. You won't ever really need to do that kind of backtracking though, so don't worry.</p>

<p><U><B>Different types of parent templates</B></U><BR>
Staying on the basics, there are different types of parent templates (parent templates are what I'm calling templates that start with an underscore) These include things like powerups, projectiles, enemies, etc..</p>

<p><B>Actors</B>- Actors are simply enemies, and the player himself.  The only exception I can find to this is grenades. For whatever reason, they are marked as actors in templates. There are several different types of actors.. </p>

<blockquote>
<font color="#0080C0">_actor</font> -- Generic values for actors<BR>
<font color="#0080C0">_walkplayer</font> -- The player himself.. Walkplayers are spawn points in levels, they refer to kyle.cog which handles spawning effects for players. <BR>
<font color="#0080C0">_flyactor</font> -- Any enemy that flies<BR>
<font color="#0080C0">_humanactor</font> -- Any enemy that walks<BR>
<font color="#0080C0">_swimactor</font> -- Any enemy that swims<BR>
<font color="#0080C0">_droidactor</font> -- The template used for droids, this is entirely based off of _humanactor, but has different thingflags.<BR>
<font color="#0080C0">_civilian</font> -- This is based off of _humanactor also, but with quite a few different values<BR>
<font color="#0080C0">_darkjedi</font> -- This is.. *insert dramatic music* the dark jedi template.
</blockquote>

<p><B>Structures</B>- Structures are simply objects.  From rocks to computer consoles, most of the 3dos you see in the game are structures..  All structure templates can be ultimately linked back to _structure.  Like actors, there are several different types of structure templates. </p> 

<blockquote>
<font color="#0080C0">_structure</font> -- Just your average structure<BR>
<font color="#0080C0">_walkstruct</font> -- Structure you can walk on. <BR>
<font color="#0080C0">_ghostructure</font> -- This is _struct with a collide of 0. I have no idea why this exists.. My guess would be it helped the level designers keep track of what's going on in a level.. IE, if they were moving a structure to a ghost object, maybe it helped them to see the word "ghostSTRUCTURE" instead of just "ghost"..<BR>
<font color="#0080C0">_zwalkstruct</font> -- This is pretty much the same as _walkstruct, only it has the "metal" flag.. This simply means that when you step on it, it's makes a metal clinking noise.. This saves you from having to make a new .snd file for metal objects..<BR>
<font color="#0080C0">_decor</font> -- This is a structure that you cannot walk on.  These are generally used for 3dos that the player will never reach in a level.. It's used instead of other structure templates because there are less flags for JK to calculate in _decor.<BR>  
<font color="#0080C0">_ghostdecor</font> -- This is the same as _decor, but with a collide of 0.  I haven't a clue as to why this one exists either.. My guess would be the same as _ghoststructure..<BR>
<font color="#0080C0">_throwable</font> -- This makes an object throwable by force throw.. It also makes it affected by gravity.
</blockquote>

<p><B>Powerups</B>- Powerups are just items you can pick up throughout the game.. </p>

<blockquote>
<font color="#0080C0">_powerup</font> -- Just your standard powerup item<BR>
<font color="#0080C0">_droppowerup</font> -- Nothing special here either, these are just the powerups you collect from dead enemies.
</blockquote>

<p><B>Explosions</B>- Explosions in JK refer to explosions (duh) and things like sparks when a laser hits flesh or a wall.</p> 

<blockquote><font color="#0080C0">_explosion</font> -- Standard explosion.. </blockquote>

<p><B>Weapons</B>- A more suitable word for this would be projectile.  _weapon templates refer to the shots produced by guns, not the actual guns themselves.  Lightning, Destruction, and Blinding are based on _weapon along with fists, grenades, and mines. </p>

<blockquote>
<font color="#0080C0">_weapon</font> -- Generic values for projectiles.<BR>
<font color="#0080C0">_debris</font> -- This is just standard debris from an explosion.<BR>
<font color="#0080C0">_debris2</font> -- Same as debris, just uses a different explosion
</blockquote>

<p><B>Miscellaneous</B>- Just two templates that don't belong anywhere else..</p>

<blockquote>
<font color="#0080C0">_limb</font> -- Ever lop off an enemy's arm?  You made a limb! Congratulations!<BR>
<font color="#0080C0">_shard</font> -- Shards are produced when you shatter glass.
</blockquote> 

<p><B>Definitions</B>- There are alot of things in templates that may need a little explaining, so here ya go..</p>

<blockquote>
<font color="red">aiclass</font> -- The .ai file that a template uses. 
<BR><font color="red">airdrag</font> -- How much of a drag effect air has on an object (ie. How much air slows down an object's movement )
<BR><font color="red">angvel</font> -- The direction in which a thing spins.  The format is x/y/z
<BR><font color="red">blasttime</font> -- Determines how long a blast will last. Found in explosion templates.
<BR><font color="red">buoyancy</font> -- This is the floating ability of an object.  You'll notice when you shoot into water, your projectile floats up a bit or just slows down.. Buoyancy at work..
<BR><font color="red">chance</font> -- chance that the dark jedi will block with his saber (thnx to JM for this info)
<BR><font color="red">cog</font> -- This is the a cog that the template uses.. Enemies use actor cogs, the walkplayer uses kyle.cog, powerups use pow_blah.cogs, etc...
<BR><font color="red">collide</font> -- The type of collision detection on an object.. 0= no collision checking, 1=collision checking along the radius of the object, and 3= collision checking on the faces of the object... If the object is gonna be solid, it must have either 1 or 3... 1 will make a bubble of "solidity" around an object so you often cannot climb around on the 3do (a great example of this is the lambda shuttle).. 3 will detect collisions along the faces of the 3do, this is the best way, but it's hard on the system. (Thnx to Necare for the info)
<BR><font color="red">count</font> -- This is the amount of sprites that a template produces. 
<BR><font color="red">creatething</font> -- This tells the template to create a thing when it is called... A good example is the rail detonator charge.. When it is fired, it's template tells JK to create a smoke trail using the creatething command.
<BR><font color="red">damage</font> -- This is the amount of damage something inflicts.. damage is done randomly though, so this is simply the most that it can inflict.
<BR><font color="red">damageclass</font> -- This is the type of damage something inflicts.. It can be either force, magic, fire, impact, energy, crushing, or freezing.. I may have missed something, but you get the point.
<BR><font color="red">debris</font> -- This is the debris released when an explosion occurs
<BR><font color="red">elementsize</font> -- This is the size of individual sprites in a template. Sprites are generally very very small..
<BR><font color="red">error</font> -- the chances of an aiming error--found in darkjedi templates
<BR><font color="red">explode</font> -- This tells which template to use for the explosion.  An example is when the bryar bolt hits a wall it uses +laserhit.
<BR><font color="red">eyeoffset</font> -- The distance from the ground to an enemy/player's vertical line of sight (ie, the measurement from the ground to their eyes)
<BR><font color="red">fireoffset</font> -- This is the distance in x/y/z form that the projectile appears from the enemy/player.
<BR><font color="red">flashrgb</font> -- This is the rgb (red, green, blue) value of a flash produced by an explosion. RGB value is a ratio system showing the ratio of red to green to blue in a given color. 
<BR><font color="red">fleshhit</font> -- Same as explode, only it tells which template to use when it hits a player.
<BR><font color="red">force</font> -- No, it's not THE force.. It's the force of impact on a punch or any other type of impact.
<BR><font color="red">fov</font> -- Field Of Vision.. Just the range of vision from left to right that an enemy/player can see at once.
<BR><font color="red">health</font> -- The starting health of an enemy, player, and in some instances, an object.
<BR><font color="red">height</font> -- ???????????????????????????????????????????????????????? 
<BR><font color="red">jumpspeed</font> -- The speed at which you jump. 
<BR><font color="red">light</font> -- Things in JK give off light.. This is the amount that they give off
<BR><font color="red">lightintensity</font> -- The intensity of the player's field light.
<BR><font color="red">lightoffset</font> -- The distance from the ground to the source of the player's field light.  
<BR><font color="red">mass</font> -- This is the objects mass.  As far as I can figure, it simply dictates at what speed an object falls.
<BR><font color="red">material</font> -- The .mat file that a template uses.. You'll only see "material" in a template for a sprite.
<BR><font color="red">maxheadpitch</font> -- The highest an enemy/player can look up.
<BR><font color="red">maxhealth</font> -- The maximum amount of health an enemy/player can get. (player can get health boosts or force healing, dark jedi can regenerate health using force healing.. nothing else regenerates health)
<BR><font color="red">maxlight</font> -- Maximum light a thing can give off
<BR><font color="red">maxrotthrust</font> -- Max Rotation Thrust..I'm guessing it's the fastest that an enemy/player can START turning around (IE, when you first start turning, it's the maxrotthrust, then as you pick up speed, you reach the maxrotvel).. maxrotthrust is always a little lower then maxrotvel, that's what leads me to believe this.
<BR><font color="red">maxrotvel</font> -- Max Rotation Velocity.. It's the fastest that an enemy/player can turn around.
<BR><font color="red">maxvel</font> -- Max Velocity.. It's the fastest an enemy/player can move in a straight line.
<BR><font color="red">mindamage</font> -- This is the least damage something can deal out.
<BR><font color="red">minheadpitch</font> -- The lowest an enemy/player can look down.
<BR><font color="red">minsize</font> -- Minimum size that a sprite can be
<BR><font color="red">model3d</font> -- The .3do that the template uses.
<BR><font color="red">move</font> -- This is the method of movement for an object. Not many templates include "move".  Options are either physics, which means JK's physics affect the thing, or path, which means it cannot be affected.
<BR><font color="red">movesize</font> -- The movesize is always the same as the size, except for one instance, the sequencer charge template. It's guessed that the movesize is larger and is the bubble which triggers the explosion of the secondary mode of the sequencer charge. (thanks for the seq charge info from Erwinl)
<BR><font color="red">Orient</font> -- This is simply the orientation in x/y/z form.. Only 1 template has an orientation other then (0.0000/0.0000/0.0000), so I think it's a safe bet to use it for all your templates..
<BR><font color="red">particle</font> -- Refers to a .par file.. That little green sphere that wraps around you when you use protection is a .par file, to give you an idea of what they are.. 
<BR><font color="red">phsyflags</font> -- These determine what factors of JK physics will affect the thing.
<BR><font color="red">pitchrange</font> -- The range of error either up or down.. (ie, how far below or above your target the projectile can hit)
<BR><font color="red">puppet</font> -- Puppets are actually .pup files. They control what .keys will be played for specific actions. For more info on pups and keys go to darkjedi.com's unnoficial JK specs.
<BR><font color="red">range</font> -- This is the maximum range that a smoke cloud (made of sprites) will spread before dissapearing..
<BR><font color="red">rate</font> -- Rate of creation for certain templates like projectiles and sprites.. This is to prevent too many projectiles or sprites existing at once which would hurt bandwidth and memory. (Also, who wants a rateless projectile? [other then a cheater that is] That'd mean no pause in between shots..)
<BR><font color="red">respawn</font> -- The time before an object respawns.. Found in powerup templates
<BR><font color="red">thingflags</font> -- These play significant roles in every template. Flags can control a huge amount of things.  Look at darkjedi.com's Unofficial Jedi Knight Specs to see alot of the flags..
<BR><font color="red">size</font> -- Size is just the radius of the 3do.. There are some exceptions, but nearly every LEC 3do uses the radius... Oh, in case you don't know... Radius of a 3do can be found by opening it up with a text editor..
<BR><font color="red">soundclass</font> -- This is a .snd file.  A .snd controls what sound (in .wav format) will be played for specific events like running on metal, falling, etc.. .snd files are simply text files.
<BR><font color="red">sprites</font> -- Sprites are 2d images.  Sparks and explosions among other things are sprites
<BR><font color="red">staticdrag</font> -- A thing's natural resistance to things like sector thrust.  (Thnx to Necare for that explanation)
<BR><font color="red">surfdrag</font> -- Like airdrag, only it controls the amount of drag a surface has on the object.
<BR><font color="red">timer</font> -- If there's a timer in a template, it means that the object is destroyed after a given amount of time.. This is used to cut down the amount of objects in a level, freeing up memory and in multiplayer games, bandwidth.
<BR><font color="red">trailrandangle</font> -- Randomizes the aim of the trailing thing.
<BR><font color="red">trailthing</font> -- Creates a trailing thing for a projectile. Used to create the smoke of the secondary fire concussion blast, and also used in force lightning..
<BR><font color="red">type</font> -- This doesn't mean anything to JK, it's documentation for editors.. Unless you're making alot of templates, and you won't be able to remember what each one is, you won't ever need to use this.. It's just an editing crib-note :)
<BR><font color="red">typeflags</font> -- Type of thing the template is for.
<BR><font color="red">vel</font> -- This is just a thing's velocity
<BR><font color="red">weapon</font> -- This is the template of the weapon an enemy uses.
<BR><font color="red">weapon2</font> -- This is the weapon an enemy will switch to in certain circumstances.. Enemies with rail detonators for instance, will swipe at you with the rail detonator when you get close.. That swiping attack is their "weapon2".
<BR><font color="red">yawrange</font> -- The range of error either left or right.. (ie, how far left or right of your target that the projectile can hit)
</blockquote>

<!-- Include footer -->
<!--#include virtual="/ssi/tutorial_footer.htm" -->
<!-- End include -->

</font>
</body>

</html>